{"version":3,"sources":["components/LoginRoute/index.js","components/Header/index.js","components/HomeRoute/index.js","components/FiltersGroup/index.js","components/JobCard/index.js","components/JobsRoute/index.js","components/SimilarJobCard/index.js","components/JobItemDetails/index.js","components/NotFound/index.js","components/ProtectedRoute/index.js","App.js","index.js"],"names":["LoginRoute","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","username","password","loginErrorMessage","usernameOnChange","event","setState","target","value","passwordOnChange","submitSuccess","jwtToken","Cookies","set","expires","props","history","replace","submissionFailure","errorMsg","submitTheLoginDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$state","userDetails","options","response","data","wrap","_context","prev","next","preventDefault","method","body","JSON","stringify","fetch","sent","json","ok","jwt_token","error_msg","stop","_x","_createClass","key","_this$state2","this","undefined","get","_jsx","Redirect","to","className","children","_jsxs","onSubmit","src","alt","htmlFor","type","placeholder","id","onChange","Component","withRouter","logout","remove","Link","onClick","AiFillHome","size","color","BsFillBriefcaseFill","FiLogOut","HomeRoute","logOutFromHomeRoute","_Fragment","Header","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","employmentFilteredList","FiltersGroup","getTheEmploymentFilter","employmentFilter","updateTheEmploymentFilter","checked","push","console","log","filter","eachItem","getTheEmploymentFilters","map","eachType","getTheSalaryRangeFilter","range","updateTheSalaryFilter","name","getTheSalaryRangeFilters","eachRange","JobCard","jobDetails","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","AiFillStar","MdLocationOn","BsBriefcaseFill","profileAPIStatusConstants","jobApistatusConstants","JobInitial","JobSuccess","JobFailure","JobInProcess","JobsRoute","profileDetailsApiStatus","profileDetails","jobsData","jobsAPIStatus","initial","employmentTypeList","minimumPackage","searchQuery","getTheProfileDetails","updatedData","headers","Authorization","profile_details","profileImageUrl","profile_image_url","shortBio","short_bio","getTheSuccessProfileContainer","getTheFailureProfileContainer","getTheProfileLoadingContainer","Loader","height","width","getTheProfileContainer","filteredList","getTheAllJobs","_callee2","filters","url","jobs","updatedJobData","_context2","join","eachJobDetails","company_logo_url","employment_type","job_description","package_per_annum","renderJobsSuccessView","eachJob","renderJobsFailureView","jobsLoadingView","renderTheAllJobs","searchJobsByQuery","searchOnChange","BsSearch","SimilarJobCard","details","jobItemApiStatusConstants","JobItemDetails","apiStatus","jobItemDetails","similarJobItemDetails","getTheJobItemAndSimilarJobs","match","params","similarJobs","updatedJobDetails","updatedSimilarJobs","job_details","similar_jobs","companyWebsiteUrl","company_website_url","skills","eachSkill","imageUrl","image_url","lifeAtCompany","description","life_at_company","renderTheLocationContainer","renderTheEmploymentTypeContainer","getTheSkillsContainer","getTheLifeAtCompany","renderJobItemSuccessView","rel","href","HiOutlineExternalLink","eachSimilarJob","renderJobItemFailureView","renderJobItemLoadingView","renderTheAllViews","NotFound","ProtectedRoute","Route","_objectSpread","App","Switch","exact","path","component","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.2bf80b6a.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport './index.css'\n\nclass LoginRoute extends Component {\n  state = {\n    username: '',\n    password: '',\n    loginErrorMessage: '',\n  }\n\n  usernameOnChange = event => {\n    this.setState({username: event.target.value})\n  }\n\n  passwordOnChange = event => {\n    this.setState({password: event.target.value})\n  }\n\n  submitSuccess = jwtToken => {\n    Cookies.set('jwt_token', jwtToken, {expires: 30})\n    const {history} = this.props\n    history.replace('/')\n  }\n\n  submissionFailure = errorMsg => {\n    this.setState({loginErrorMessage: errorMsg, username: '', password: ''})\n  }\n\n  submitTheLoginDetails = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {\n      username,\n      password,\n    }\n\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n\n    const response = await fetch('https://apis.ccbp.in/login', options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.submitSuccess(data.jwt_token)\n    } else {\n      this.submissionFailure(data.error_msg)\n    }\n  }\n\n  render() {\n    const {loginErrorMessage, username, password} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-route-container\">\n        <form className=\"login-card\" onSubmit={this.submitTheLoginDetails}>\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"app-logo\"\n          />\n          <div className=\"username-container\">\n            <label className=\"login-labels\" htmlFor=\"username\">\n              USERNAME\n            </label>\n            <br />\n            <input\n              value={username}\n              type=\"text\"\n              placeholder=\"Username\"\n              id=\"username\"\n              className=\"login-inputs\"\n              onChange={this.usernameOnChange}\n            />\n            <br />\n          </div>\n          <div className=\"username-container\">\n            <label className=\"login-labels\" htmlFor=\"password\">\n              PASSWORD\n            </label>\n            <br />\n            <input\n              value={password}\n              type=\"password\"\n              placeholder=\"Password\"\n              id=\"password\"\n              className=\"login-inputs\"\n              onChange={this.passwordOnChange}\n            />\n            <br />\n          </div>\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n          <p className=\"login-error-message\">{loginErrorMessage}</p>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginRoute\n","import Cookies from 'js-cookie'\nimport {Link, withRouter} from 'react-router-dom'\nimport {AiFillHome} from 'react-icons/ai'\nimport {BsFillBriefcaseFill} from 'react-icons/bs'\nimport {FiLogOut} from 'react-icons/fi'\nimport './index.css'\n\nconst Header = props => {\n  const logout = () => {\n    Cookies.remove('jwt_token')\n    const {history} = props\n    history.replace('/login')\n  }\n  return (\n    <nav className=\"nav-header\">\n      <div className=\"nav-content\">\n        <Link className=\"nav-link-items\" to=\"/\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png \"\n            alt=\"website logo\"\n            className=\"header-website-logo\"\n          />\n        </Link>\n\n        <ul className=\"nav-items-container\">\n          <Link className=\"nav-link-items\" to=\"/\">\n            <li className=\"nav-item\">Home</li>\n          </Link>\n          <Link className=\"nav-link-items\" to=\"/jobs\">\n            <li className=\"nav-item\">Jobs</li>\n          </Link>\n        </ul>\n        <div>\n          <button type=\"button\" className=\"logout-button\" onClick={logout}>\n            Logout\n          </button>\n        </div>\n        <ul className=\"mobile-nav-items-container\">\n          <Link className=\"nav-link-items\" to=\"/\">\n            <li>\n              <AiFillHome size=\"30\" color=\" #cbd5e1\" />\n            </li>\n          </Link>\n          <Link className=\"nav-link-items\" to=\"/jobs\">\n            <li>\n              <BsFillBriefcaseFill size=\"30\" color=\" #cbd5e1\" />\n            </li>\n          </Link>\n          <li>\n            <button\n              className=\"logout-image-button\"\n              onClick={logout}\n              type=\"button\"\n            >\n              <FiLogOut size=\"30\" color=\" #cbd5e1\" />\n            </button>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default withRouter(Header)\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\n\nimport './index.css'\n\nclass HomeRoute extends Component {\n  logOutFromHomeRoute = () => {\n    const {history} = this.props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"home-route-container\">\n          <div className=\"home-route-details-container\">\n            <h1 className=\"home-route-heading\">\n              Find The Job That Fits Your Life\n            </h1>\n            <p className=\"home-route-description\">\n              Millions of people are searching for jobs, salary, information,\n              company reviews. Find the job that fits your abilities and\n              potential\n            </p>\n            <Link to=\"/jobs\">\n              <button type=\"button\" className=\"find-jobs-button\">\n                Find Jobs\n              </button>\n            </Link>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default HomeRoute\n","import {Component} from 'react'\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nlet employmentFilteredList = []\n\nclass FiltersGroup extends Component {\n  getTheEmploymentFilter = employmentFilter => {\n    const {updateTheEmploymentFilter} = this.props\n    const {label, employmentTypeId} = employmentFilter\n    const checkBoxSelected = event => {\n      if (event.target.checked) {\n        employmentFilteredList.push(employmentTypeId)\n        console.log(employmentFilteredList)\n        updateTheEmploymentFilter(employmentFilteredList)\n      } else {\n        employmentFilteredList = employmentFilteredList.filter(\n          eachItem => eachItem !== employmentTypeId,\n        )\n        console.log(employmentFilteredList)\n        updateTheEmploymentFilter(employmentFilteredList)\n      }\n    }\n    return (\n      <li className=\"employment-filter-item\" key={employmentTypeId}>\n        <input\n          className=\"check-boxes\"\n          type=\"checkbox\"\n          onChange={checkBoxSelected}\n          id={employmentTypeId}\n        />\n        <label htmlFor={employmentTypeId} className=\"check-box-labels\">\n          {label}\n        </label>\n      </li>\n    )\n  }\n\n  getTheEmploymentFilters = () => (\n    <ul className=\"filters-list\">\n      {employmentTypesList.map(eachType =>\n        this.getTheEmploymentFilter(eachType),\n      )}\n    </ul>\n  )\n\n  getTheSalaryRangeFilter = range => {\n    const {updateTheSalaryFilter} = this.props\n    const {salaryRangeId, label} = range\n    const radioInputSelected = () => {\n      updateTheSalaryFilter(salaryRangeId)\n    }\n    return (\n      <li className=\"employment-filter-item\" key={salaryRangeId}>\n        <input\n          className=\"check-boxes\"\n          type=\"radio\"\n          name=\"salary\"\n          onChange={radioInputSelected}\n          id={salaryRangeId}\n        />\n        <label htmlFor={salaryRangeId} className=\"check-box-labels\">\n          {label}\n        </label>\n      </li>\n    )\n  }\n\n  getTheSalaryRangeFilters = () => (\n    <ul className=\"filters-list\">\n      {salaryRangesList.map(eachRange =>\n        this.getTheSalaryRangeFilter(eachRange),\n      )}\n    </ul>\n  )\n\n  render() {\n    return (\n      <div className=\"filters-group-container\">\n        <div className=\"employment-type-filters-container\">\n          <h1 className=\"employment-types\">Type of Employment</h1>\n          {this.getTheEmploymentFilters()}\n        </div>\n        <hr className=\"hr-line\" />\n        <div className=\"salary-range-filers-container\">\n          <h1 className=\"employment-types\">Salary Range</h1>\n          {this.getTheSalaryRangeFilters()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FiltersGroup\n","import {Link} from 'react-router-dom'\nimport {MdLocationOn} from 'react-icons/md'\nimport {AiFillStar} from 'react-icons/ai'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport './index.css'\n\nconst JobCard = props => {\n  const {jobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    id,\n    jobDescription,\n    location,\n    packagePerAnnum,\n    rating,\n    title,\n  } = jobDetails\n\n  const renderTheLocationContainer = () => (\n    <div className=\"location-container\">\n      <MdLocationOn size=\"26\" color=\"#f8fafc\" />\n      <p className=\"location\">{location}</p>\n    </div>\n  )\n\n  const renderTheEmploymentTypeContainer = () => (\n    <div className=\"location-container\">\n      <BsBriefcaseFill size=\"26\" color=\"#f8fafc\" />\n      <p className=\"employment-type\">{employmentType}</p>\n    </div>\n  )\n\n  return (\n    <Link to={`/jobs/${id}`} className=\"job-card-link-item\">\n      <li className=\"job-card\">\n        <div className=\"card-top-section\">\n          <img\n            src={companyLogoUrl}\n            alt=\"company logo\"\n            className=\"compony-logo\"\n          />\n          <div className=\"job-title-container\">\n            <h1 className=\"job-title\">{title}</h1>\n            <div className=\"rating-container\">\n              <AiFillStar color=\"#fbbf24\" size=\"20\" />\n              <p className=\"rating\">{rating}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"job-details-container\">\n          <div className=\"location-and-employment-container\">\n            {renderTheLocationContainer()}\n            {renderTheEmploymentTypeContainer()}\n          </div>\n          <p className=\"package\">{packagePerAnnum}</p>\n        </div>\n        <hr className=\"card-hr-line\" />\n        <div>\n          <h1 className=\"job-description-heading\">Description</h1>\n          <p className=\"job-description\">{jobDescription}</p>\n        </div>\n      </li>\n    </Link>\n  )\n}\n\nexport default JobCard\n","import {Component} from 'react'\nimport {BsSearch} from 'react-icons/bs'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport Header from '../Header'\nimport FiltersGroup from '../FiltersGroup'\n// import AllJobs from '../AllJobs'\nimport JobCard from '../JobCard'\nimport './index.css'\n\nconst profileAPIStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nconst jobApistatusConstants = {\n  JobInitial: 'JOB_INITIAL',\n  JobSuccess: 'JOB_SUCCESS',\n  JobFailure: 'JOB_FAILURE',\n  JobInProcess: 'JOB_IN_PROCESS',\n}\n\nclass JobsRoute extends Component {\n  state = {\n    profileDetailsApiStatus: profileAPIStatusConstants.initial,\n    profileDetails: {},\n    jobsData: [],\n    jobsAPIStatus: jobApistatusConstants.initial,\n    employmentTypeList: [],\n    minimumPackage: '',\n    searchQuery: '',\n  }\n\n  componentDidMount() {\n    this.getTheProfileDetails()\n    this.getTheAllJobs()\n  }\n\n  getTheProfileDetails = async () => {\n    this.setState({\n      profileDetailsApiStatus: profileAPIStatusConstants.inProcess,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch('https://apis.ccbp.in/profile', options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = {\n        name: data.profile_details.name,\n        profileImageUrl: data.profile_details.profile_image_url,\n        shortBio: data.profile_details.short_bio,\n      }\n      console.log(updatedData)\n      this.setState({\n        profileDetails: updatedData,\n        profileDetailsApiStatus: profileAPIStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        profileDetailsApiStatus: profileAPIStatusConstants.failure,\n      })\n    }\n  }\n\n  getTheSuccessProfileContainer = () => {\n    const {profileDetails} = this.state\n    const {name, profileImageUrl, shortBio} = profileDetails\n    return (\n      <div className=\"profile-details-container\">\n        <div>\n          <img src={profileImageUrl} alt=\"profile\" />\n          <h1 className=\"user-name\">{name}</h1>\n          <p className=\"short-bio\">{shortBio}</p>\n        </div>\n      </div>\n    )\n  }\n\n  getTheFailureProfileContainer = () => (\n    <div>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={this.getTheProfileDetails}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  getTheProfileLoadingContainer = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  getTheProfileContainer = () => {\n    const {profileDetailsApiStatus} = this.state\n    switch (profileDetailsApiStatus) {\n      case profileAPIStatusConstants.success:\n        return this.getTheSuccessProfileContainer()\n      case profileAPIStatusConstants.failure:\n        return this.getTheFailureProfileContainer()\n      case profileAPIStatusConstants.inProcess:\n        return this.getTheProfileLoadingContainer()\n      default:\n        return null\n    }\n  }\n\n  updateTheEmploymentFilter = filteredList => {\n    this.setState(\n      {\n        employmentTypeList: filteredList,\n      },\n      this.getTheAllJobs,\n    )\n  }\n\n  updateTheSalaryFilter = id => {\n    console.log(id)\n    this.setState({minimumPackage: id}, this.getTheAllJobs)\n  }\n\n  getTheAllJobs = async () => {\n    this.setState({jobsAPIStatus: jobApistatusConstants.JobInProcess})\n    const {employmentTypeList, minimumPackage, searchQuery} = this.state\n    const filters =\n      employmentTypeList.length === 0 ? '' : employmentTypeList.join(',')\n\n    const url = `https://apis.ccbp.in/jobs?employment_type=${filters}&minimum_package=${minimumPackage}&search=${searchQuery}`\n\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const {jobs} = data\n      const updatedJobData = jobs.map(eachJobDetails => ({\n        companyLogoUrl: eachJobDetails.company_logo_url,\n        employmentType: eachJobDetails.employment_type,\n        id: eachJobDetails.id,\n        jobDescription: eachJobDetails.job_description,\n        location: eachJobDetails.location,\n        packagePerAnnum: eachJobDetails.package_per_annum,\n        rating: eachJobDetails.rating,\n        title: eachJobDetails.title,\n      }))\n      this.setState({\n        jobsData: updatedJobData,\n        jobsAPIStatus: jobApistatusConstants.JobSuccess,\n      })\n    } else {\n      this.setState({jobsAPIStatus: jobApistatusConstants.JobFailure})\n    }\n  }\n\n  renderJobsSuccessView = () => {\n    const {jobsData} = this.state\n    if (jobsData.length === 0) {\n      return (\n        <div className=\"no-jobs-found-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n            alt=\"no jobs\"\n            className=\"no-jobs-image\"\n          />\n          <h1 className=\"no-jobs-found-heading\">No Jobs Found</h1>\n          <p className=\"no-jobs-error-msg\">\n            We could not find any jobs. Try other filters.\n          </p>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <ul className=\"jobs-container\">\n          {jobsData.map(eachJob => (\n            <JobCard jobDetails={eachJob} key={eachJob.id} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderJobsFailureView = () => (\n    <div className=\"jobs-failure-view-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png \"\n        alt=\"failure view\"\n        className=\"jobs-failure-view-image\"\n      />\n      <h1 className=\"jobs-failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-error-msg\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        onClick={this.getTheAllJobs}\n        className=\"retry-button\"\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  jobsLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderTheAllJobs = () => {\n    const {jobsAPIStatus} = this.state\n    switch (jobsAPIStatus) {\n      case jobApistatusConstants.JobSuccess:\n        return this.renderJobsSuccessView()\n      case jobApistatusConstants.JobFailure:\n        return this.renderJobsFailureView()\n      case jobApistatusConstants.JobInProcess:\n        return this.jobsLoadingView()\n      default:\n        return null\n    }\n  }\n\n  searchJobsByQuery = () => {\n    this.getTheAllJobs()\n  }\n\n  searchOnChange = event => {\n    this.setState({searchQuery: event.target.value})\n  }\n\n  render() {\n    const {searchQuery} = this.state\n    return (\n      <>\n        <Header />\n        <div className=\"jobs-route-container\">\n          <div className=\"profile-and-filters-container\">\n            <div className=\"search-bar-container\">\n              <input\n                type=\"search\"\n                className=\"jobs-route-search-bar\"\n                placeholder=\"Search\"\n                value={searchQuery}\n                onChange={this.searchOnChange}\n              />\n              <button\n                type=\"button\"\n                className=\"search-icon-button\"\n                data-testid=\"searchButton\"\n                onClick={this.searchJobsByQuery}\n              >\n                <BsSearch color=\"#cbd5e1\" />\n              </button>\n            </div>\n            <div className=\"profile-container\">\n              {this.getTheProfileContainer()}\n            </div>\n            <hr className=\"hr-line\" />\n            <FiltersGroup\n              updateTheEmploymentFilter={this.updateTheEmploymentFilter}\n              updateTheSalaryFilter={this.updateTheSalaryFilter}\n            />\n          </div>\n          <div className=\"all-jobs-container\">\n            <div className=\"big-search-bar-container\">\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                className=\"big-search-bar\"\n                value={searchQuery}\n                onChange={this.searchOnChange}\n              />\n              <button\n                type=\"button\"\n                onClick={this.searchJobsByQuery}\n                className=\"big-search-button\"\n              >\n                <BsSearch color=\"#f1f5f9\" size=\"17\" />\n              </button>\n            </div>\n            <div className=\"all-jobs\">{this.renderTheAllJobs()}</div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default JobsRoute\n","import {Link} from 'react-router-dom'\nimport {MdLocationOn} from 'react-icons/md'\nimport {AiFillStar} from 'react-icons/ai'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport './index.css'\n\nconst SimilarJobCard = props => {\n  const {details} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    id,\n    jobDescription,\n    location,\n    rating,\n    title,\n  } = details\n\n  const renderTheLocationContainer = () => (\n    <div className=\"similar-job-location-container\">\n      <MdLocationOn size=\"26\" color=\"#f8fafc\" />\n      <p className=\"similar-job-location\">{location}</p>\n    </div>\n  )\n\n  const renderTheEmploymentTypeContainer = () => (\n    <div className=\"similar-job-location-container\">\n      <BsBriefcaseFill size=\"26\" color=\"#f8fafc\" />\n      <p className=\"similar-job-employment-type\">{employmentType}</p>\n    </div>\n  )\n\n  return (\n    <Link to={`/jobs/${id}`} className=\"similar-job-card-link-item\">\n      <li className=\"similar-job-card\">\n        <div className=\"similar-job-card-top-section\">\n          <img\n            src={companyLogoUrl}\n            alt=\"similar job company logo\"\n            className=\"similar-job-compony-logo\"\n          />\n          <div className=\"similar-job-title-container\">\n            <h1 className=\"similar-job-title\">{title}</h1>\n            <div className=\"similar-job-rating-container\">\n              <AiFillStar color=\"#fbbf24\" size=\"20\" />\n              <p className=\"similar-job-rating\">{rating}</p>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <h1 className=\"similar-job-description-heading\">Description</h1>\n          <p className=\"similar-job-description\">{jobDescription}</p>\n        </div>\n        <div className=\"similar-job-details-container\">\n          <div className=\"similar-job-location-and-employment-container\">\n            {renderTheLocationContainer()}\n            {renderTheEmploymentTypeContainer()}\n          </div>\n        </div>\n      </li>\n    </Link>\n  )\n}\n\nexport default SimilarJobCard\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {MdLocationOn} from 'react-icons/md'\nimport {AiFillStar} from 'react-icons/ai'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {HiOutlineExternalLink} from 'react-icons/hi'\nimport SimilarJobCard from '../SimilarJobCard'\nimport Header from '../Header'\nimport './index.css'\n\nconst jobItemApiStatusConstants = {\n  initial: 'JOB_ITEM_INITIAL',\n  success: 'JOB_ITEM_SUCCESS',\n  failure: 'JOB_ITEM_FAILURE',\n  inProcess: 'JOB_ITEM_IN_PROCESS',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    apiStatus: jobItemApiStatusConstants.initial,\n    jobItemDetails: {},\n    similarJobItemDetails: [],\n  }\n\n  componentDidMount() {\n    this.getTheJobItemAndSimilarJobs()\n  }\n\n  getTheJobItemAndSimilarJobs = async () => {\n    this.setState({apiStatus: jobItemApiStatusConstants.inProcess})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    console.log(id)\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = {\n        jobDetails: data.job_details,\n        similarJobs: data.similar_jobs,\n      }\n      const {jobDetails, similarJobs} = updatedData\n      console.log(updatedData)\n      const updatedJobDetails = {\n        companyLogoUrl: jobDetails.company_logo_url,\n        companyWebsiteUrl: jobDetails.company_website_url,\n        employmentType: jobDetails.employment_type,\n        id: jobDetails.id,\n        jobDescription: jobDetails.job_description,\n        skills: jobDetails.skills.map(eachSkill => ({\n          imageUrl: eachSkill.image_url,\n          name: eachSkill.name,\n        })),\n        title: jobDetails.title,\n        lifeAtCompany: {\n          description: jobDetails.life_at_company.description,\n          imageUrl: jobDetails.life_at_company.image_url,\n        },\n        location: jobDetails.location,\n        packagePerAnnum: jobDetails.package_per_annum,\n        rating: jobDetails.rating,\n      }\n      const updatedSimilarJobs = similarJobs.map(eachJobDetails => ({\n        companyLogoUrl: eachJobDetails.company_logo_url,\n        employmentType: eachJobDetails.employment_type,\n        id: eachJobDetails.id,\n        jobDescription: eachJobDetails.job_description,\n        location: eachJobDetails.location,\n        rating: eachJobDetails.rating,\n        title: eachJobDetails.title,\n      }))\n      this.setState({\n        jobItemDetails: updatedJobDetails,\n        similarJobItemDetails: updatedSimilarJobs,\n        apiStatus: jobItemApiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: jobItemApiStatusConstants.failure})\n    }\n  }\n\n  renderTheLocationContainer = location => (\n    <div className=\"job-item-location-container\">\n      <MdLocationOn size=\"26\" color=\"#f8fafc\" />\n      <p className=\"job-item-location\">{location}</p>\n    </div>\n  )\n\n  renderTheEmploymentTypeContainer = employmentType => (\n    <div className=\"job-item-location-container\">\n      <BsBriefcaseFill size=\"26\" color=\"#f8fafc\" />\n      <p className=\"job-item-employment-type\">{employmentType}</p>\n    </div>\n  )\n\n  getTheSkillsContainer = skills => (\n    <div className=\"skills-container\">\n      <h1 className=\"skills-heading\">Skills</h1>\n      <ul className=\"skills-list-container\">\n        {skills.map(eachSkill => (\n          <li key={eachSkill.name}>\n            <div className=\"skill-item\">\n              <img\n                src={eachSkill.imageUrl}\n                alt={eachSkill.name}\n                className=\"skill-image\"\n              />\n              <p className=\"skill-name\">{eachSkill.name}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n\n  getTheLifeAtCompany = lifeAtCompany => {\n    const {description, imageUrl} = lifeAtCompany\n    return (\n      <div>\n        <h1 className=\"life-at-company-heading\">Life At Company</h1>\n        <div className=\"life-at-company-description-container\">\n          <p className=\"life-at-company-description\">{description}</p>\n          <img src={imageUrl} alt=\"life at company\" className=\"company-image\" />\n        </div>\n      </div>\n    )\n  }\n\n  renderJobItemSuccessView = () => {\n    const {jobItemDetails, similarJobItemDetails} = this.state\n    console.log(similarJobItemDetails)\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      employmentType,\n      jobDescription,\n      skills,\n      lifeAtCompany,\n      location,\n      packagePerAnnum,\n      rating,\n      title,\n    } = jobItemDetails\n    console.log(skills)\n    return (\n      <>\n        <div className=\"job-item-details-card\">\n          <div className=\"job-item-card-top-section\">\n            <img\n              src={companyLogoUrl}\n              alt=\"job details company logo\"\n              className=\"job-item-compony-logo\"\n            />\n            <div className=\"job-item-title-container\">\n              <h1 className=\"job-item-title\">{title}</h1>\n              <div className=\"job-item-rating-container\">\n                <AiFillStar color=\"#fbbf24\" size=\"20\" />\n                <p className=\"job-item-rating\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"job-item-details\">\n            <div className=\"job-item-location-and-employment-container\">\n              {this.renderTheLocationContainer(location)}\n              {this.renderTheEmploymentTypeContainer(employmentType)}\n            </div>\n            <p className=\"job-item-package\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"job-item-card-hr-line\" />\n          <div>\n            <div className=\"visit-container\">\n              <h1 className=\"job-item-description-heading\">Description</h1>\n              <a\n                className=\"visit-item\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={companyWebsiteUrl}\n              >\n                <p className=\"visit-text\">Visit</p>\n                <HiOutlineExternalLink color=\"#6366f1\" size=\"18\" />\n              </a>\n            </div>\n\n            <p className=\"job-item-description\">{jobDescription}</p>\n            {this.getTheSkillsContainer(skills)}\n            {this.getTheLifeAtCompany(lifeAtCompany)}\n          </div>\n        </div>\n        <div className=\"similar-jobs-container\">\n          <h1 className=\"similar-jobs-heading\">Similar Jobs</h1>\n          <ul className=\"similar-jobs-list-container\">\n            {similarJobItemDetails.map(eachSimilarJob => (\n              <SimilarJobCard\n                details={eachSimilarJob}\n                key={eachSimilarJob.id}\n              />\n            ))}\n          </ul>\n        </div>\n      </>\n    )\n  }\n\n  renderJobItemFailureView = () => (\n    <div className=\"jobs-failure-view-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png \"\n        alt=\"failure view\"\n        className=\"jobs-failure-view-image\"\n      />\n      <h1 className=\"jobs-failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-error-msg\">\n        We cannot seem to find the page you are looking for\n      </p>\n      <button\n        type=\"button\"\n        onClick={this.getTheJobItemAndSimilarJobs}\n        className=\"retry-button\"\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderJobItemLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderTheAllViews = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case jobItemApiStatusConstants.success:\n        return this.renderJobItemSuccessView()\n      case jobItemApiStatusConstants.failure:\n        return this.renderJobItemFailureView()\n      case jobItemApiStatusConstants.inProcess:\n        return this.renderJobItemLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"job-item-details-container\">\n          {this.renderTheAllViews()}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <img\n      src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png \"\n      alt=\"not found\"\n      className=\"not-found-image\"\n    />\n    <h1 className=\"page-not-found-heading\">Page Not Found</h1>\n    <p className=\"not-found-page-msg\">\n      We are sorry, the page you requested could not be found\n    </p>\n  </div>\n)\n\nexport default NotFound\n","import Cookies from 'js-cookie'\nimport {Redirect, Route} from 'react-router-dom'\n\nconst ProtectedRoute = props => {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Route, Switch, Redirect} from 'react-router-dom'\n\nimport LoginRoute from './components/LoginRoute'\nimport HomeRoute from './components/HomeRoute'\nimport JobsRoute from './components/JobsRoute'\nimport JobItemDetails from './components/JobItemDetails'\nimport NotFound from './components/NotFound'\nimport ProtectedRoute from './components/ProtectedRoute'\n\nimport './App.css'\n\n// These are the lists used in the application. You can move them to any component needed.\n\n// Replace your code here\nconst App = () => (\n  <div>\n    <Switch>\n      <Route exact path=\"/login\" component={LoginRoute} />\n      <ProtectedRoute exact path=\"/\" component={HomeRoute} />\n      <ProtectedRoute exact path=\"/jobs\" component={JobsRoute} />\n      <ProtectedRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n      <Route exact path=\"/not-found\" component={NotFound} />\n      <Redirect to=\"not-found\" />\n    </Switch>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}